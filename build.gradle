apply plugin: 'java'
apply plugin: 'jacoco'
apply plugin: 'checkstyle'
apply plugin: 'pmd'
apply plugin: 'maven'
apply plugin: 'signing'

group = 'net.wukl'
archivesBaseName = 'cacodi'
version = '1.3.0'

sourceCompatibility = '1.10'
targetCompatibility = '1.10'

repositories {
    jcenter()
    mavenCentral()
}

dependencies {
    implementation 'org.slf4j:slf4j-api:1.7.26'

    testImplementation 'ch.qos.logback:logback-classic:1.2.3'

    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.4.2'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.4.2'

    testImplementation 'org.mockito:mockito-core:2.27.0'
    testImplementation 'org.assertj:assertj-core:3.12.2'
}

test {
    useJUnitPlatform()

    failFast = true

    finalizedBy jacocoTestReport
}

jacoco {
    toolVersion = '0.8.3'
}

checkstyle {
    toolVersion = '8.20'
}

pmd {
    ignoreFailures = true
}

jacocoTestReport {
    reports {
        xml.enabled = true
        html.enabled = true
    }
}

jar {
    from ('.') {
        include 'LICENSE'
        into 'net/wukl/cacodi'
    }
}

task javadocJar(type: Jar) {
    classifier = 'javadoc'
    from javadoc
}

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

artifacts {
    archives javadocJar, sourcesJar
}

signing {
    sign configurations.archives
}

uploadArchives {
    repositories {
        mavenDeployer {
            beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

            repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
                authentication(userName: ossrhUsername, password: ossrhPassword)
            }

            snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots/") {
                authentication(userName: ossrhUsername, password: ossrhPassword)
            }

            pom.project {
                name 'Cacodi'
                packaging 'jar'
                description 'A very simple, but powerful dependency injector'
                url 'https://git.wukl.net/wukl/cacodi'

                scm {
                    connection 'scm:git:https://git.wukl.net/wukl/cacodi.git'
                    developerConnection 'scm:git:ssh://git.wukl.net:wukl/cacodi.git'
                    url 'https://git.wukl.net/wukl/cacodi.git'
                }

                licenses {
                    license {
                        name 'MIT License'
                        url 'https://opensource.org/licenses/MIT'
                    }
                }

                developers {
                    developer {
                        id 'wukl'
                        name 'Luc Everse'
                        email 'luc@wukl.net'
                    }
                }
            }
        }
    }
}
